#!/bin/bash

# The purpose of this script is to provide a single script that can be used to run either packagesetup or configsetup scripts or both

# TODO: add a solution for the script to require invoking with sudo privilege 
# NOTE: Best solution I found online was to use 'sudo -E' and to check inside the script using $EUID. Was that what you were looking for? Is there a better solution?
# My issue was that running sudo alone without any options changed the environment variables to the root user's
# TODO: Come up with solution to take the current username of user that used the script for the configsetup. This should fix having to use sudo -E  


# FIX: pwd is probably not going ot work here with sudo
currentdir=$(pwd)

helpmessage=" OPTIONS:
  -i    Run the packagesetup install script
  -c    Run the configsetup script
  -h    Print the help menu"

while getopts ":ich" opt; do
  case "${opt}" in
    i)
      $currentdir/packagesetup || echo "Try using 'sudo -E ./setup <option>'"
      ;;
    c)
      $currentdir/configsetup
      ;;
    h)
      echo "$helpmessage"
      ;;
    *)
      err:" No such option -$OPTARG "
      echo "Try 'setup -h' for a list of options."
      exit 1
      ;;
  esac
done

# Check if positional paramater was provided by checking whether the length of the first positional parameter is equal to zero
# If no option was passed into the script, let the user know
if [[ -z $1 ]]; then
  echo "An option must be provided.
Try 'setup -h' for a list of options."
fi
